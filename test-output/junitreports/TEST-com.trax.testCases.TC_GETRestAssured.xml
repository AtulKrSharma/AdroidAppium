<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="BBL8P644F3" failures="0" tests="1" name="com.trax.testCases.TC_GETRestAssured" time="47.178" errors="1" timestamp="2022-09-15T19:02:50 EDT" skipped="0">
  <testcase classname="com.trax.testCases.TC_GETRestAssured" name="GETRestAssured" time="47.178">
    <error message="Could not start a new session. Response code 500. Message: There is no device that matches your criteria. DesiredCapabilities: {&quot;capabilities&quot;:{&quot;firstMatch&quot;:[{&quot;appium:autoGrantPermissions&quot;:true,&quot;appium:appActivity&quot;:&quot;com.samsung.android.dialer.DialtactsActivity&quot;,&quot;appium:deviceName&quot;:&quot;Samsung.*&quot;,&quot;platformName&quot;:&quot;android&quot;,&quot;appium:automationName&quot;:&quot;UiAutomator2&quot;,&quot;appium:platformVersion&quot;:&quot;12&quot;,&quot;appium:appPackage&quot;:&quot;com.samsung.android.dialer&quot;,&quot;sauce:options&quot;:{&quot;name&quot;:&quot;Appium- Android TCs&quot;,&quot;sauceLabsImageInjectionEnabled&quot;:true,&quot;sauceLabsNetworkCaptureEnabled&quot;:true,&quot;resigningEnabled&quot;:true,&quot;build&quot;:&quot;Atul Appium-Build&quot;}}]}}
Build info: version: &#039;unknown&#039;, revision: &#039;unknown&#039;, time: &#039;unknown&#039;
System info: host: &#039;Sauce Labs RDC&#039;, ip: &#039;N/A&#039;, os.name: &#039;Linux&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;5.4.202+&#039;, java.version: &#039;11.0.16&#039;
Driver info: driver.version: unknown
Build info: version: &#039;4.4.0&#039;, revision: &#039;e5c75ed026a&#039;
System info: host: &#039;BBL8P644F3&#039;, ip: &#039;192.168.0.20&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;17.0.1&#039;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:appActivity=com.samsung.android.dialer.DialtactsActivity, appium:appPackage=com.samsung.android.dialer, appium:deviceName=Samsung.*, appium:platformVersion=12, appium:autoGrantPermissions=true, appium:automationName=UiAutomator2, platformName=ANDROID, sauce:options=Capabilities {build: Atul Appium-Build, name: Appium- Android TCs, resigningEnabled: true, sauceLabsImageInjectionEnabled: true, sauceLabsNetworkCaptureEnabled: true}}], desiredCapabilities=Capabilities {appActivity: com.samsung.android.dialer...., appPackage: com.samsung.android.dialer, appium:deviceName: Samsung.*, appium:platformVersion: 12, autoGrantPermissions: true, automationName: UiAutomator2, platformName: ANDROID, sauce:options: Capabilities {build: Atul A...}}]
Capabilities {}" type="org.openqa.selenium.SessionNotCreatedException">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: There is no device that matches your criteria. DesiredCapabilities: {"capabilities":{"firstMatch":[{"appium:autoGrantPermissions":true,"appium:appActivity":"com.samsung.android.dialer.DialtactsActivity","appium:deviceName":"Samsung.*","platformName":"android","appium:automationName":"UiAutomator2","appium:platformVersion":"12","appium:appPackage":"com.samsung.android.dialer","sauce:options":{"name":"Appium- Android TCs","sauceLabsImageInjectionEnabled":true,"sauceLabsNetworkCaptureEnabled":true,"resigningEnabled":true,"build":"Atul Appium-Build"}}]}}
Build info: version: 'unknown', revision: 'unknown', time: 'unknown'
System info: host: 'Sauce Labs RDC', ip: 'N/A', os.name: 'Linux', os.arch: 'amd64', os.version: '5.4.202+', java.version: '11.0.16'
Driver info: driver.version: unknown
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'BBL8P644F3', ip: '192.168.0.20', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.1'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:appActivity=com.samsung.android.dialer.DialtactsActivity, appium:appPackage=com.samsung.android.dialer, appium:deviceName=Samsung.*, appium:platformVersion=12, appium:autoGrantPermissions=true, appium:automationName=UiAutomator2, platformName=ANDROID, sauce:options=Capabilities {build: Atul Appium-Build, name: Appium- Android TCs, resigningEnabled: true, sauceLabsImageInjectionEnabled: true, sauceLabsNetworkCaptureEnabled: true}}], desiredCapabilities=Capabilities {appActivity: com.samsung.android.dialer...., appPackage: com.samsung.android.dialer, appium:deviceName: Samsung.*, appium:platformVersion: 12, autoGrantPermissions: true, automationName: UiAutomator2, platformName: ANDROID, sauce:options: Capabilities {build: Atul A...}}]
Capabilities {}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:144)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:126)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:102)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:155)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:189)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:229)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:80)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:92)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:117)
at com.trax.testCases.TC_GETRestAssured.GETRestAssured(TC_GETRestAssured.java:68)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- GETRestAssured -->
  <system-out/>
</testsuite> <!-- com.trax.testCases.TC_GETRestAssured -->
